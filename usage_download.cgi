#!/bin/perl

# test to download a file
use DBI;
use CGI qw(:standard);
require 'usagegetuid.pl';

#check authorisation
# ... either IP address or valid cookie generated by a username/password program.
#        password authentication: if valid, save a random cookie to browser, store in db
#         if no cookie, ask for password again but log in db for user
#         if too many 'lost cookies', could mean password proliferation - flag up or reject

# if authentication ok:

$uid=param('uid');
$year=param('year');

$dir='/home/usage/';
$filename="$uid\_$year.csv";
$filesize= -s $dir.$filename;

#$filesize = 300000;
$dbh = DBI->connect("dbi:Pg:dbname=journals;host=localhost;port=5432", "jon", "")||die "couldn't connect";
$stored_uid=get_uid();
&denied unless $stored_uid==$uid;

open(CSV, $dir.$filename);

print "Content-type: application/csv\n";
#print "Content-Disposition:attachment;filename=test.pdf\n\n";
print "Content-length: $filesize\n";
print "Content-Disposition:inline;filename=$filename\n\n";

# high-cpu, low memory usage:
#while($line=<PDF>){
#  print $line;
#}
# advantage: can check for incomplete download


# low-cpu, high memory usage:
@fileholder = <CSV>;
print @fileholder;


sub denied{
  print header, start_html, h1("access denied"), 
  print p, "Access denied. Please ensure you have cookies enabled and try again", end_html;
  exit;
}



